# Docker Compose for Chatnary Python Backend
services:
  # Main Python Backend
  chatnary-backend:
    build: .
    ports:
      - "8000:8000"
    environment:
      # Database
      - MONGODB_URI=${MONGODB_URI}
      - DB_NAME=chatnary
      
      # Meilisearch
      - MEILISEARCH_HOST=${MEILISEARCH_HOST}
      - MEILISEARCH_API_KEY=${MEILISEARCH_API_KEY}
      
      # AI Keys (set these in .env file)
      - OPENAI_API_KEY=${OPENAI_API_KEY:-your_openai_api_key_here}
      - GEMINI_API_KEY=${GEMINI_API_KEY:-your_gemini_api_key_here}
      
      # Security
      - JWT_SECRET=${JWT_SECRET:-chatnary-secret-key-2025}
      
      # Frontend
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
      
    volumes:
      - ./uploads:/app/uploads
      - ./vector_stores:/app/vector_stores
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - meilisearch
    restart: unless-stopped
    networks:
      - chatnary-network

  # MongoDB Database
  mongodb:
    image: mongo:7
    environment:
      - MONGO_INITDB_DATABASE=chatnary
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    restart: unless-stopped
    networks:
      - chatnary-network

  # Meilisearch Search Engine
  meilisearch:
    image: getmeili/meilisearch:v1.5
    environment:
      - MEILI_MASTER_KEY=chatnary_master_key_2025
      - MEILI_DB_PATH=/meili_data
      - MEILI_HTTP_ADDR=0.0.0.0:7700
    volumes:
      - meilisearch_data:/meili_data
    ports:
      - "7700:7700"
    restart: unless-stopped
    networks:
      - chatnary-network

volumes:
  mongodb_data:
  meilisearch_data:

networks:
  chatnary-network:
    driver: bridge
